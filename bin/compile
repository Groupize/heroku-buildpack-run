#!/usr/bin/env bash
#
# The 'compile' script is executed by the slug compiler with three arguments:
#   $1: build_dir, location of your app directory on the build dyno
#   $2: cache_dir, directory on the build dyno that persists between builds
#   $3: env_dir, directory holding all the app's config vars as files
#
# More information here: https://devcenter.heroku.com/articles/buildpack-api
#------------------------------------------------------------------------------#

# Indent stdin
indent()     { sed 's/^/       /'; }
arrow()      { sed 's/^/-----> /'; }
indent-err() { sed "s/^/$(printf '\033')[31m       /;s/$/$(printf '\033')[0m/"; }
arrow-err()  { sed "s/^/$(printf '\033')[31m-----> /;s/$/$(printf '\033')[0m/"; }

# These environment variables can be accessed from the user-supplied commands
export BUILD_DIR=$1
export CACHE_DIR=$2
export ENV_DIR=$3

cd "$BUILD_DIR"

# If BUILDPACK_RUN_LOAD_CONFIG is set, create file for loading config vars in
# $ENV_DIR into env vars (skip those in BUILDPACK_RUN_LOAD_CONFIG_SKIP)
BUILDPACK_RUN_CONFIG=$(mktemp)
if [[ -f "$ENV_DIR/BUILDPACK_RUN_LOAD_CONFIG" ]]; then
  echo "Config vars will be available as env vars" | arrow
  if [[ -f "$ENV_DIR/BUILDPACK_RUN_LOAD_CONFIG_SKIP" ]]; then
    skip="^($(tr ':' '|' <"$ENV_DIR/BUILDPACK_RUN_LOAD_CONFIG_SKIP"))$"
    echo "(except: $(cat "$ENV_DIR/BUILDPACK_RUN_LOAD_CONFIG_SKIP"))" | indent
  else
    skip='^()$'
  fi
  shopt -s nullglob
  for f in "$ENV_DIR"/*; do
    if ! grep -qE "$skip" <<<$(basename "$f"); then
      echo "export $(basename "$f")=\$(cat "$f")" >>"$BUILDPACK_RUN_CONFIG"
    fi
  done
fi

# Extract commands from BUILDPACK_RUN config var
if [[ -f "$ENV_DIR/BUILDPACK_RUN" ]]; then
  BUILDPACK_RUN_COMMANDS=$(cat "$ENV_DIR/BUILDPACK_RUN")
elif [[ -f buildpack-run.sh ]]; then
  BUILDPACK_RUN_COMMANDS=./buildpack-run.sh
else
  echo "Error: can't apply buildpack." | arrow-err
  cat <<EOF | indent-err
You must either create an executable script named buildpack-run.sh
in the root directory of your app, or specify the commands you want
to execute in the BUILDPACK_RUN config variable (colon-delimited).
See https://github.com/weibeld/heroku-buildpack-run#configure
EOF
  exit 1
fi
IFS=':' BUILDPACK_RUN_COMMANDS=($BUILDPACK_RUN_COMMANDS)

# Run commands
for BUILDPACK_RUN_CMD in ${BUILDPACK_RUN_COMMANDS[@]}; do
  echo "Running: $BUILDPACK_RUN_CMD" | arrow
  . "$BUILDPACK_RUN_CONFIG"
  eval "$BUILDPACK_RUN_CMD"
  BUILDPACK_RUN_CMD_EXIT=$?
  if [[ "$BUILDPACK_RUN_CMD_EXIT" != 0 ]]; then
    echo "Aborting: $BUILDPACK_RUN_CMD exited with $BUILDPACK_RUN_CMD_EXIT" | arrow-err
    exit 1
  fi
done
